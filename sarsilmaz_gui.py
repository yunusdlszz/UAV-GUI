# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sarsilmaz.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *

import time

from dronekit import Command, connect, VehicleMode, LocationGlobalRelative
from pymavlink import mavutil

import math
import cv2
import sys
import random


#DRONE BAÄžLANTISI
#
#python3 mavproxy.py --master=/dev/ttyUSB0 --baudrate 115200 --out 127.0.0.1:14550 --out 127.0.0.1:14551
connection_string= ('127.0.0.1:14550')
#connection_string='/dev/ttyUSB0'
#connection_string = '/dev/serial/by-id/usb-ArduPilot_Pixhawk4_250033001051393130343139-if00'

global iha
iha=connect(connection_string,wait_ready=True,timeout=100)
#iha=connect(connection_string,wait_ready=False,timeout=100,baud=57600)



class Ui_MainWindow(QMainWindow,object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1345, 1037)
        MainWindow.setStyleSheet("background-color: rgb(85, 87, 83);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.frame_mission = QtWidgets.QFrame(self.centralwidget)
        self.frame_mission.setGeometry(QtCore.QRect(1020, 500, 111, 261))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_mission.setFont(font)
        self.frame_mission.setAutoFillBackground(False)
        self.frame_mission.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_mission.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_mission.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_mission.setObjectName("frame_mission")
        self.button_mission4 = QtWidgets.QPushButton(self.frame_mission)
        self.button_mission4.setGeometry(QtCore.QRect(10, 160, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mission4.setFont(font)
        self.button_mission4.setObjectName("button_mission4")
        self.button_mission2 = QtWidgets.QPushButton(self.frame_mission)
        self.button_mission2.setGeometry(QtCore.QRect(10, 80, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mission2.setFont(font)
        self.button_mission2.setObjectName("button_mission2")
        self.button_mission3 = QtWidgets.QPushButton(self.frame_mission)
        self.button_mission3.setGeometry(QtCore.QRect(10, 120, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mission3.setFont(font)
        self.button_mission3.setObjectName("button_mission3")
        self.button_mission1 = QtWidgets.QPushButton(self.frame_mission)
        self.button_mission1.setGeometry(QtCore.QRect(10, 40, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mission1.setFont(font)
        self.button_mission1.setStyleSheet("selection-background-color: rgb(238, 238, 236);")
        self.button_mission1.setObjectName("button_mission1")
        self.label_mission = QtWidgets.QLabel(self.frame_mission)
        self.label_mission.setGeometry(QtCore.QRect(20, 10, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_mission.setFont(font)
        self.label_mission.setObjectName("label_mission")
        self.frame_mode = QtWidgets.QFrame(self.centralwidget)
        self.frame_mode.setGeometry(QtCore.QRect(560, 500, 451, 261))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_mode.setFont(font)
        self.frame_mode.setAutoFillBackground(False)
        self.frame_mode.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_mode.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_mode.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_mode.setObjectName("frame_mode")
        self.button_mode_auto = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_auto.setGeometry(QtCore.QRect(10, 80, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_auto.setFont(font)
        self.button_mode_auto.setObjectName("button_mode_auto")
        self.button_mode_land = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_land.setGeometry(QtCore.QRect(120, 40, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_land.setFont(font)
        self.button_mode_land.setObjectName("button_mode_land")
        self.button_mode_guided = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_guided.setGeometry(QtCore.QRect(120, 80, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_guided.setFont(font)
        self.button_mode_guided.setObjectName("button_mode_guided")
        self.button_mode_rtl = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_rtl.setGeometry(QtCore.QRect(10, 40, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_rtl.setFont(font)
        self.button_mode_rtl.setObjectName("button_mode_rtl")
        self.labell_mode = QtWidgets.QLabel(self.frame_mode)
        self.labell_mode.setGeometry(QtCore.QRect(210, 10, 51, 20))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.labell_mode.setFont(font)
        self.labell_mode.setObjectName("labell_mode")
        self.button_mode_stabilize = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_stabilize.setGeometry(QtCore.QRect(350, 90, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_stabilize.setFont(font)
        self.button_mode_stabilize.setObjectName("button_mode_stabilize")
        self.button_mode_QHover = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_QHover.setGeometry(QtCore.QRect(10, 180, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_QHover.setFont(font)
        self.button_mode_QHover.setObjectName("button_mode_QHover")
        self.button_mode_QStabilize = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_QStabilize.setGeometry(QtCore.QRect(110, 220, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_QStabilize.setFont(font)
        self.button_mode_QStabilize.setObjectName("button_mode_QStabilize")
        self.button_mode_QLoiter = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_QLoiter.setGeometry(QtCore.QRect(110, 180, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_QLoiter.setFont(font)
        self.button_mode_QLoiter.setObjectName("button_mode_QLoiter")
        self.button_mode_QLand = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_QLand.setGeometry(QtCore.QRect(210, 200, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_QLand.setFont(font)
        self.button_mode_QLand.setObjectName("button_mode_QLand")
        self.button_mode_QRtl = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_QRtl.setGeometry(QtCore.QRect(10, 220, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_QRtl.setFont(font)
        self.button_mode_QRtl.setObjectName("button_mode_QRtl")
        self.button_mode_fbwb = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_fbwb.setGeometry(QtCore.QRect(250, 90, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_fbwb.setFont(font)
        self.button_mode_fbwb.setObjectName("button_mode_fbwb")
        self.button_mode_cruise = QtWidgets.QPushButton(self.frame_mode)
        self.button_mode_cruise.setGeometry(QtCore.QRect(290, 130, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_mode_cruise.setFont(font)
        self.button_mode_cruise.setObjectName("button_mode_cruise")
        self.label_quadplane = QtWidgets.QLabel(self.frame_mode)
        self.label_quadplane.setGeometry(QtCore.QRect(60, 140, 111, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_quadplane.setFont(font)
        self.label_quadplane.setAlignment(QtCore.Qt.AlignCenter)
        self.label_quadplane.setObjectName("label_quadplane")
        self.label_fixedwing = QtWidgets.QLabel(self.frame_mode)
        self.label_fixedwing.setGeometry(QtCore.QRect(300, 60, 91, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_fixedwing.setFont(font)
        self.label_fixedwing.setAlignment(QtCore.Qt.AlignCenter)
        self.label_fixedwing.setObjectName("label_fixedwing")
        self.frame_command = QtWidgets.QFrame(self.centralwidget)
        self.frame_command.setGeometry(QtCore.QRect(1140, 500, 111, 261))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_command.setFont(font)
        self.frame_command.setAutoFillBackground(False)
        self.frame_command.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_command.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_command.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_command.setObjectName("frame_command")
        self.button_disarm = QtWidgets.QPushButton(self.frame_command)
        self.button_disarm.setGeometry(QtCore.QRect(10, 80, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_disarm.setFont(font)
        self.button_disarm.setObjectName("button_disarm")
        self.button_arm = QtWidgets.QPushButton(self.frame_command)
        self.button_arm.setGeometry(QtCore.QRect(10, 40, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_arm.setFont(font)
        self.button_arm.setObjectName("button_arm")
        self.label_command = QtWidgets.QLabel(self.frame_command)
        self.label_command.setGeometry(QtCore.QRect(10, 10, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_command.setFont(font)
        self.label_command.setObjectName("label_command")
        self.button_takeoff = QtWidgets.QPushButton(self.frame_command)
        self.button_takeoff.setGeometry(QtCore.QRect(10, 120, 89, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_takeoff.setFont(font)
        self.button_takeoff.setObjectName("button_takeoff")
        self.frame_drone_control = QtWidgets.QFrame(self.centralwidget)
        self.frame_drone_control.setGeometry(QtCore.QRect(560, 770, 291, 221))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_drone_control.setFont(font)
        self.frame_drone_control.setAutoFillBackground(False)
        self.frame_drone_control.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_drone_control.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_drone_control.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_drone_control.setObjectName("frame_drone_control")
        self.button_up = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_up.setGeometry(QtCore.QRect(0, 40, 132, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_up.setFont(font)
        self.button_up.setObjectName("button_up")
        self.button_down = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_down.setGeometry(QtCore.QRect(150, 40, 131, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_down.setFont(font)
        self.button_down.setObjectName("button_down")
        self.button_left = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_left.setGeometry(QtCore.QRect(0, 90, 132, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_left.setFont(font)
        self.button_left.setObjectName("button_left")
        self.button_right = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_right.setGeometry(QtCore.QRect(150, 90, 131, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_right.setFont(font)
        self.button_right.setObjectName("button_right")
        self.button_backward = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_backward.setGeometry(QtCore.QRect(0, 140, 132, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_backward.setFont(font)
        self.button_backward.setObjectName("button_backward")
        self.button_forward = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_forward.setGeometry(QtCore.QRect(150, 140, 131, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_forward.setFont(font)
        self.button_forward.setObjectName("button_forward")
        self.label_dronecontrol = QtWidgets.QLabel(self.frame_drone_control)
        self.label_dronecontrol.setGeometry(QtCore.QRect(70, 10, 151, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_dronecontrol.setFont(font)
        self.label_dronecontrol.setObjectName("label_dronecontrol")
        self.button_yaw_negative = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_yaw_negative.setGeometry(QtCore.QRect(0, 180, 132, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_yaw_negative.setFont(font)
        self.button_yaw_negative.setObjectName("button_yaw_negative")
        self.button_yaw_positive = QtWidgets.QPushButton(self.frame_drone_control)
        self.button_yaw_positive.setGeometry(QtCore.QRect(150, 180, 132, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.button_yaw_positive.setFont(font)
        self.button_yaw_positive.setObjectName("button_yaw_positive")
        self.frame_parameter_info = QtWidgets.QFrame(self.centralwidget)
        self.frame_parameter_info.setGeometry(QtCore.QRect(100, 500, 451, 491))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.frame_parameter_info.setFont(font)
        self.frame_parameter_info.setAutoFillBackground(False)
        self.frame_parameter_info.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame_parameter_info.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_parameter_info.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_parameter_info.setObjectName("frame_parameter_info")
        self.label_home_location = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_home_location.setGeometry(QtCore.QRect(10, 280, 131, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_home_location.setFont(font)
        self.label_home_location.setObjectName("label_home_location")
        self.label_arm = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_arm.setGeometry(QtCore.QRect(320, 160, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_arm.setFont(font)
        self.label_arm.setObjectName("label_arm")
        self.label_mode = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_mode.setGeometry(QtCore.QRect(320, 60, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_mode.setFont(font)
        self.label_mode.setObjectName("label_mode")
        self.line_armable = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_armable.setGeometry(QtCore.QRect(320, 130, 111, 21))
        self.line_armable.setReadOnly(True)
        self.line_armable.setObjectName("line_armable")
        self.line_arm = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_arm.setGeometry(QtCore.QRect(320, 180, 113, 21))
        self.line_arm.setReadOnly(True)
        self.line_arm.setObjectName("line_arm")
        self.label_armable = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_armable.setGeometry(QtCore.QRect(320, 110, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_armable.setFont(font)
        self.label_armable.setObjectName("label_armable")
        self.label_altitude = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_altitude.setGeometry(QtCore.QRect(320, 210, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_altitude.setFont(font)
        self.label_altitude.setObjectName("label_altitude")
        self.line_mode = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_mode.setGeometry(QtCore.QRect(320, 80, 113, 21))
        self.line_mode.setReadOnly(True)
        self.line_mode.setObjectName("line_mode")
        self.line_velocity = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_velocity.setGeometry(QtCore.QRect(320, 280, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_velocity.setFont(font)
        self.line_velocity.setReadOnly(True)
        self.line_velocity.setObjectName("line_velocity")
        self.label_velocity = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_velocity.setGeometry(QtCore.QRect(320, 260, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_velocity.setFont(font)
        self.label_velocity.setObjectName("label_velocity")
        self.line_altitude = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_altitude.setGeometry(QtCore.QRect(320, 230, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_altitude.setFont(font)
        self.line_altitude.setReadOnly(True)
        self.line_altitude.setObjectName("line_altitude")
        self.label_airspeed = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_airspeed.setGeometry(QtCore.QRect(320, 310, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_airspeed.setFont(font)
        self.label_airspeed.setObjectName("label_airspeed")
        self.line_airspeed = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_airspeed.setGeometry(QtCore.QRect(320, 330, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_airspeed.setFont(font)
        self.line_airspeed.setReadOnly(True)
        self.line_airspeed.setObjectName("line_airspeed")
        self.label_groundspeed = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_groundspeed.setGeometry(QtCore.QRect(320, 360, 121, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_groundspeed.setFont(font)
        self.label_groundspeed.setObjectName("label_groundspeed")
        self.line_groundspeed = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_groundspeed.setGeometry(QtCore.QRect(320, 380, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_groundspeed.setFont(font)
        self.line_groundspeed.setReadOnly(True)
        self.line_groundspeed.setObjectName("line_groundspeed")
        self.label_gps = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_gps.setGeometry(QtCore.QRect(10, 390, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_gps.setFont(font)
        self.label_gps.setObjectName("label_gps")
        self.label_parameter_info = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_parameter_info.setGeometry(QtCore.QRect(10, 20, 321, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_parameter_info.setFont(font)
        self.label_parameter_info.setObjectName("label_parameter_info")
        self.label_battery = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_battery.setGeometry(QtCore.QRect(10, 60, 71, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_battery.setFont(font)
        self.label_battery.setObjectName("label_battery")
        self.label_global_location = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_global_location.setGeometry(QtCore.QRect(10, 170, 141, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_global_location.setFont(font)
        self.label_global_location.setObjectName("label_global_location")
        self.plainText_battery = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_battery.setGeometry(QtCore.QRect(10, 80, 231, 71))
        self.plainText_battery.setReadOnly(True)
        self.plainText_battery.setObjectName("plainText_battery")
        self.plainText_global_location = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_global_location.setGeometry(QtCore.QRect(10, 190, 231, 71))
        self.plainText_global_location.setReadOnly(True)
        self.plainText_global_location.setObjectName("plainText_global_location")
        self.plainText_home_location = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_home_location.setGeometry(QtCore.QRect(10, 300, 231, 71))
        self.plainText_home_location.setReadOnly(True)
        self.plainText_home_location.setObjectName("plainText_home_location")
        self.plainText_gps = QtWidgets.QPlainTextEdit(self.frame_parameter_info)
        self.plainText_gps.setGeometry(QtCore.QRect(10, 410, 231, 71))
        self.plainText_gps.setReadOnly(True)
        self.plainText_gps.setObjectName("plainText_gps")
        self.label_heading = QtWidgets.QLabel(self.frame_parameter_info)
        self.label_heading.setGeometry(QtCore.QRect(320, 410, 121, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_heading.setFont(font)
        self.label_heading.setObjectName("label_heading")
        self.line_heading = QtWidgets.QLineEdit(self.frame_parameter_info)
        self.line_heading.setGeometry(QtCore.QRect(320, 430, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_heading.setFont(font)
        self.line_heading.setReadOnly(True)
        self.line_heading.setObjectName("line_heading")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(860, 770, 331, 221))
        self.frame.setAutoFillBackground(False)
        self.frame.setStyleSheet("background-color: rgb(186, 189, 182);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.button_goloc_go = QtWidgets.QPushButton(self.frame)
        self.button_goloc_go.setGeometry(QtCore.QRect(220, 80, 91, 121))
        self.button_goloc_go.setObjectName("button_goloc_go")
        self.line_goloc_altitude = QtWidgets.QLineEdit(self.frame)
        self.line_goloc_altitude.setGeometry(QtCore.QRect(10, 180, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_goloc_altitude.setFont(font)
        self.line_goloc_altitude.setReadOnly(False)
        self.line_goloc_altitude.setObjectName("line_goloc_altitude")
        self.label_goloc_altitude = QtWidgets.QLabel(self.frame)
        self.label_goloc_altitude.setGeometry(QtCore.QRect(10, 160, 91, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_goloc_altitude.setFont(font)
        self.label_goloc_altitude.setObjectName("label_goloc_altitude")
        self.line_goloc_longitude = QtWidgets.QLineEdit(self.frame)
        self.line_goloc_longitude.setGeometry(QtCore.QRect(10, 130, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_goloc_longitude.setFont(font)
        self.line_goloc_longitude.setReadOnly(False)
        self.line_goloc_longitude.setObjectName("line_goloc_longitude")
        self.label_goloc_latitude = QtWidgets.QLabel(self.frame)
        self.label_goloc_latitude.setGeometry(QtCore.QRect(10, 60, 81, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_goloc_latitude.setFont(font)
        self.label_goloc_latitude.setObjectName("label_goloc_latitude")
        self.label_goloc_longitude = QtWidgets.QLabel(self.frame)
        self.label_goloc_longitude.setGeometry(QtCore.QRect(10, 110, 91, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_goloc_longitude.setFont(font)
        self.label_goloc_longitude.setObjectName("label_goloc_longitude")
        self.line_goloc_latitude = QtWidgets.QLineEdit(self.frame)
        self.line_goloc_latitude.setGeometry(QtCore.QRect(10, 80, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.line_goloc_latitude.setFont(font)
        self.line_goloc_latitude.setReadOnly(False)
        self.line_goloc_latitude.setObjectName("line_goloc_latitude")
        self.label_mission_2 = QtWidgets.QLabel(self.frame)
        self.label_mission_2.setGeometry(QtCore.QRect(80, 10, 151, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_mission_2.setFont(font)
        self.label_mission_2.setObjectName("label_mission_2")
        self.label_camera = QtWidgets.QLabel(self.centralwidget)
        self.label_camera.setGeometry(QtCore.QRect(20, 10, 640, 480))
        self.label_camera.setAutoFillBackground(False)
        self.label_camera.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.label_camera.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_camera.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_camera.setText("")
        self.label_camera.setObjectName("label_camera")
        
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(670, 10, 640, 480))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.graphicsView.setFont(font)
        self.graphicsView.setMouseTracking(False)
        self.graphicsView.setStyleSheet("background-image: url(logo.png);\n"
"background-color: rgb(186, 189, 182);\n"
"")
        self.graphicsView.setFrameShadow(QtWidgets.QFrame.Raised)
        self.graphicsView.setSceneRect(QtCore.QRectF(0.0, 0.0, 0.0, 0.0))
        self.graphicsView.setObjectName("graphicsView")
        self.frame.raise_()
        self.frame_mission.raise_()
        self.frame_mode.raise_()
        self.frame_command.raise_()
        self.frame_drone_control.raise_()
        self.frame_parameter_info.raise_()
        self.label_camera.raise_()
        self.graphicsView.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1345, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        #****************************Kamera Input*******************************

        self.camera_label = QLabel(self.label_camera)
        self.camera_label.resize(640, 480)
        self.capture = cv2.VideoCapture(0)
        self.timer = self.startTimer(30) # 30ms = 30fps

        #************************************************************************

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.button_mission4.setText(_translate("MainWindow", "MISSION 4"))
        self.button_mission2.setText(_translate("MainWindow", "MISSION 2"))
        self.button_mission3.setText(_translate("MainWindow", "MISSION 3"))
        self.button_mission1.setText(_translate("MainWindow", "MISSION 1"))
        self.label_mission.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">MISSION</span></p></body></html>"))
        self.button_mode_auto.setText(_translate("MainWindow", "AUTO"))
        self.button_mode_land.setText(_translate("MainWindow", "LAND"))
        self.button_mode_guided.setText(_translate("MainWindow", "GUIDED"))
        self.button_mode_rtl.setText(_translate("MainWindow", "RTL"))
        self.labell_mode.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">MODE</span></p></body></html>"))
        self.button_mode_stabilize.setText(_translate("MainWindow", "STABILIZE"))
        self.button_mode_QHover.setText(_translate("MainWindow", "QHOVER"))
        self.button_mode_QStabilize.setText(_translate("MainWindow", "QSTABILIZE"))
        self.button_mode_QLoiter.setText(_translate("MainWindow", "QLOITER"))
        self.button_mode_QLand.setText(_translate("MainWindow", "QLAND"))
        self.button_mode_QRtl.setText(_translate("MainWindow", "QRTL"))
        self.button_mode_fbwb.setText(_translate("MainWindow", "FBWB"))
        self.button_mode_cruise.setText(_translate("MainWindow", "CRUISE"))
        self.label_quadplane.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">QUADPLANE</span></p></body></html>"))
        self.label_fixedwing.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">FIXED WING</span></p></body></html>"))
        self.button_disarm.setText(_translate("MainWindow", "DISARM"))
        self.button_arm.setText(_translate("MainWindow", "ARM"))
        self.label_command.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">COMMAND</span></p></body></html>"))
        self.button_takeoff.setText(_translate("MainWindow", "TAKEOFF"))
        self.button_up.setText(_translate("MainWindow", "UP"))
        self.button_down.setText(_translate("MainWindow", "DOWN"))
        self.button_left.setText(_translate("MainWindow", "LEFT"))
        self.button_right.setText(_translate("MainWindow", "RIGHT"))
        self.button_backward.setText(_translate("MainWindow", "BACKWARD"))
        self.button_forward.setText(_translate("MainWindow", "FORWARD"))
        self.label_dronecontrol.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">DRONE CONTROL</span></p></body></html>"))
        self.button_yaw_negative.setText(_translate("MainWindow", "YAW(-)"))
        self.button_yaw_positive.setText(_translate("MainWindow", "YAW(+)"))
        self.label_home_location.setText(_translate("MainWindow", "HOME LOCATION"))
        self.label_arm.setText(_translate("MainWindow", "ARM"))
        self.label_mode.setText(_translate("MainWindow", "MODE"))
        self.label_armable.setText(_translate("MainWindow", "ARMABLE"))
        self.label_altitude.setText(_translate("MainWindow", "ALTITUDE"))
        self.label_velocity.setText(_translate("MainWindow", "VELOCITY"))
        self.label_airspeed.setText(_translate("MainWindow", "AIR SPEED"))
        self.label_groundspeed.setText(_translate("MainWindow", "GROUND SPEED"))
        self.label_gps.setText(_translate("MainWindow", "GPS"))
        self.label_parameter_info.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">PARAMETER &amp; SYSTEM INFORMATION</span></p><p><span style=\" text-decoration: underline;\"><br/></span></p></body></html>"))
        self.label_battery.setText(_translate("MainWindow", "BATTERY"))
        self.label_global_location.setText(_translate("MainWindow", "GLOBAL LOCATION"))
        self.label_heading.setText(_translate("MainWindow", "HEADING"))
        self.button_goloc_go.setText(_translate("MainWindow", "GO"))
        self.label_goloc_altitude.setText(_translate("MainWindow", "ALTITUDE"))
        self.label_goloc_latitude.setText(_translate("MainWindow", "LATITUDE"))
        self.label_goloc_longitude.setText(_translate("MainWindow", "LONGITUDE"))
        self.label_mission_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline; color:#ef2929;\">GO TO LOCATION</span></p></body></html>"))


        #PUSH BUTONA FONKSÄ°YON ATANMASI
        self.button_mission1.clicked.connect(self.mission1)
        
        #**********************************************************************
        
        self.button_mode_land.clicked.connect(self.mod_degistir_land)
        self.button_mode_guided.clicked.connect(self.mod_degistir_guided)
        self.button_mode_rtl.clicked.connect(self.mod_degistir_rtl)
        self.button_mode_auto.clicked.connect(self.mod_degistir_auto)

        self.button_mode_stabilize.clicked.connect(self.mod_degistir_stabilize)
        self.button_mode_fbwb.clicked.connect(self.mod_degistir_fbwb)
        self.button_mode_cruise.clicked.connect(self.mod_degistir_cruise)

        self.button_mode_QHover.clicked.connect(self.mod_degistir_qhover)
        self.button_mode_QLand.clicked.connect(self.mod_degistir_qland)
        self.button_mode_QLoiter.clicked.connect(self.mod_degistir_qloiter)
        self.button_mode_QRtl.clicked.connect(self.mod_degistir_qrtl)
        self.button_mode_QStabilize.clicked.connect(self.mod_degistir_qstabilize)

        #self.button_mode_poshold_2.clicked.connect(self.mod_degistir_poshold)
        #self.button_mode_loiter_2.clicked.connect(self.mod_degistir_loiter)
        #self.button_mode_althold_2.clicked.connect(self.mod_degistir_althold)
        
        #**********************************************************************
        
        self.button_forward.clicked.connect(self.direction_forward)
        self.button_backward.clicked.connect(self.direction_backward)
        self.button_right.clicked.connect(self.direction_right)
        self.button_left.clicked.connect(self.direction_left)
        self.button_up.clicked.connect(self.direction_up)
        self.button_down.clicked.connect(self.direction_down)
        
        #**********************************************************************
        self.button_arm.clicked.connect(self.arm)
        self.button_disarm.clicked.connect(self.disarm)
        #**********************************************************************
        self.button_takeoff.clicked.connect(self.takeoff)
        



    #****************************************Missions***********************************************

    def mission1(self):
        
        while True:
            
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          0, 4, 0, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)
            
    #**************************************************************************************************


    #******************************************Mod Changed*********************************************

    #Quadplane Modes**********************

    def mod_degistir_qhover(self):
        iha.mode = VehicleMode("QHOVER")

    def mod_degistir_qstabilize(self):

        if iha.mode != "QSTABILIZE":
            
            msgBox = QtWidgets.QMessageBox()
            msgBox.setWindowTitle("WARNING")
            msgBox.setText("Are you sure ?");
            msgBox.setInformativeText("QStabilize mode leaves all control to the pilot. Not recommended.")
            msgBox.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
            ret = msgBox.exec()
            
            
            while not(ret == QMessageBox.Cancel or ret == QMessageBox.Yes):
                msgBox = QtWidgets.QMessageBox()
                msgBox.setWindowTitle("WARNING")
                msgBox.setText("Are you sure ?");
                msgBox.setInformativeText("QStabilize mode leaves all control to the pilot. Not recommended.")
                msgBox.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                ret = msgBox.exec()
            
            if  ret == QMessageBox.Yes:
                iha.mode = VehicleMode("QSTABILIZE")
            if  ret == QMessageBox.Cancel:
                iha.mode = iha.mode

    def mod_degistir_qrtl(self):
        iha.mode = VehicleMode("QRTL")


    def mod_degistir_qloiter(self):
        iha.mode = VehicleMode("QLOITER") 

    def mod_degistir_qland(self):
        iha.mode = VehicleMode("QLAND")

    #**********************************

    #Ortak*****************************

    def mod_degistir_land(self):
        iha.mode = VehicleMode("LAND")
    
    
    def mod_degistir_rtl(self):
        iha.mode = VehicleMode("RTL")
    
    
    def mod_degistir_guided(self):
        iha.mode = VehicleMode("GUIDED")

    def mod_degistir_auto(self):
        iha.mode = VehicleMode("AUTO")
    
    #***********************************

    #Fixed Wing Modes**************************

    def mod_degistir_stabilize(self):
        
        
        if iha.mode != "STABILIZE":
            
            msgBox = QtWidgets.QMessageBox()
            msgBox.setWindowTitle("WARNING")
            msgBox.setText("Are you sure ?");
            msgBox.setInformativeText("Stabilize mode leaves all control to the pilot. Not recommended.")
            msgBox.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
            ret = msgBox.exec()
            
            
            while not(ret == QMessageBox.Cancel or ret == QMessageBox.Yes):
                msgBox = QtWidgets.QMessageBox()
                msgBox.setWindowTitle("WARNING")
                msgBox.setText("Are you sure ?");
                msgBox.setInformativeText("Stabilize mode leaves all control to the pilot. Not recommended.")
                msgBox.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                ret = msgBox.exec()
            
            if  ret == QMessageBox.Yes:
                iha.mode = VehicleMode("STABILIZE")
            if  ret == QMessageBox.Cancel:
                iha.mode = iha.mode
        

    def mod_degistir_fbwb(self):
        iha.mode = VehicleMode("FBWB")

    
    def mod_degistir_cruise(self):
        iha.mode = VehicleMode("CRUISE")
    

    
    #**********************************************************************************************************



    def direction_forward(self):
        
#        msg = iha.message_factory.set_position_target_local_ned_encode(
#          0,
#          0, 0,
#          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
#          0b0000011111000111,
#          0, 0, 0, 
#          2, 0, 0,
#          0, 0, 0,
#          0, math.radians(0))
#        
#        iha.send_mavlink(msg)
         
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          4, 0, 0, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)
        




    def direction_backward(self):
        
#        msg = iha.message_factory.set_position_target_local_ned_encode(
#          0,
#          0, 0,
#          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
#          0b0000011111000111,
#          0, 0, 0, 
#          -2, 0, 0,
#          0, 0, 0,
#          0, math.radians(0))
#        
#        iha.send_mavlink(msg)
         
        
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          -4, 0, 0, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)
        




    def direction_right(self):
        
#        msg = iha.message_factory.set_position_target_local_ned_encode(
#          0,
#          0, 0,
#          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
#          0b0000011111000111,
#          0, 0, 0, 
#          0, 2, 0,
#          0, 0, 0,
#          0, math.radians(0))
#        
#        iha.send_mavlink(msg)
         
        
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          0, 4, 0, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)


    def direction_left(self):
        
#        msg = iha.message_factory.set_position_target_local_ned_encode(
#          0,
#          0, 0,
#          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
#          0b0000011111000111,
#          0, 0, 0, 
#          0, -2, 0,
#          0, 0, 0,
#          0, math.radians(0))
#        
#        iha.send_mavlink(msg)
        
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          0, -4, 0, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)



    def direction_up(self):
         
#        msg = iha.message_factory.set_position_target_local_ned_encode(
#          0,
#          0, 0,
#          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
#          0b0000011111000111,
#          0, 0, 0, 
#          0, 0, -2,
#          0, 0, 0,
#          0, math.radians(0))
#        
#        iha.send_mavlink(msg)
         
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          0, 0, -4, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)






    def direction_down(self):
        
#        msg = iha.message_factory.set_position_target_local_ned_encode(
#          0,
#          0, 0,
#          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
#          0b0000011111000111,
#          0, 0, 0, 
#          0, 0, 2,
#          0, 0, 0,
#          0, math.radians(0))
#        
#        iha.send_mavlink(msg)
        
        
        
         msg = iha.message_factory.set_position_target_local_ned_encode(
          0,
          0, 0,
          mavutil.mavlink.MAV_FRAME_BODY_OFFSET_NED, 
          0b0000011111111000,
          0, 0, 4, #pozisyonlar(metre)
          0, 0, 0,#hizlar(metre/s)
          0, 0, 0,#akselarasyon(fonksiyonsuz)
          0, math.radians(0))#yaw,yaw_rate(rad,rad/s)
    

         iha.send_mavlink(msg)






        #******************************Disarm**************************************
    def arm(self):
        iha.armed = True


    #***********************************Arm*****************************************

    def disarm(self):
        iha.armed = False
    

    #************************************Takeoff**************************************

    def takeoff(self):
        iha.simple_takeoff(5)
        
        if   iha.mode != "GUIDED":
            msgBox = QtWidgets.QMessageBox()
            msgBox.setWindowTitle("WARNING")
            msgBox.setText("The TAKEOFF command cannot run without GUIDED mode.");
            msgBox.setInformativeText("Set the drone's mode to GUIDED")
            ret = msgBox.exec()
        elif iha.armed == False :
            msgBox = QtWidgets.QMessageBox()
            msgBox.setWindowTitle("WARNING")
            msgBox.setText("The TAKEOFF command cannot run without ARM.");
            msgBox.setInformativeText("Set the drone to ARM")
            ret = msgBox.exec()
        elif (iha.mode == "GUIDED" and iha.armed == True) :
             iha.simple_takeoff(5)
            







    #********************************************Kamera Input************************************************

    def timerEvent(self, event):
        # Kameradan bir kare yakala
        ret, camera_label = self.capture.read()

        # Kareyi PyQt5 QPixmap nesnesine dÃ¶nÃ¼ÅŸtÃ¼r
        if ret:
            img = cv2.cvtColor(camera_label, cv2.COLOR_BGR2RGB)
            h, w, ch = img.shape
            flip = cv2.flip(img,1)
            qimg = QPixmap.fromImage(QImage(flip.data, w, h, ch*w, QImage.Format_RGB888))

            # QPixmap nesnesini QFrame iÃ§inde gÃ¶ster
            self.camera_label.setPixmap(qimg)




    #***********************************KÄ±rmÄ±zÄ± Nokta Rotasyon*****************************


    def rotation(self):
        self.x = random.randint(0,640)
        self.y = random.randint(0,480)
        self.rect.setX(self.x)
        self.rect.setY(self.y)
        ui.line_mode.setText(str(self.x))
        ui.line_armable.setText(str(self.y))
        
        
        
    #*************************************KÄ±rmÄ±zÄ± Nokta OluÅŸturma*******************************

    def createEllipse(self):
        self.pen = QPen(Qt.black)
        self.brush = QColor(255, 0, 0)
        self.rect = self.scene.addEllipse(0, 0, 10, 10, self.pen, self.brush)
        #self.rect1 = self.scene.addRect(0, 0, 30, 30, self.pen, self.brush)
        self.rect.setX(0)
        self.rect.setY(0)






if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()


    def update_line():
        ui.line_altitude.setText(str(iha.location.global_relative_frame.alt))
        ui.line_mode.setText(str(iha.mode.name))
        ui.plainText_battery.setPlainText(str(iha.battery))
        ui.plainText_battery.setPlainText("Voltage:  {}\nCurrent:  {}\nLevel:  {}".format(iha.battery.voltage, iha.battery.current, iha.battery.level))
        ui.line_armable.setText(str(iha.is_armable))
        ui.line_velocity.setText(str(iha.velocity))
        ui.line_arm.setText(str(iha.armed))
        ui.plainText_global_location.setPlainText("Latitude:  {}\nLongitude:  {}".format(iha.location.global_relative_frame.lat, iha.location.global_relative_frame.lon))
        ui.plainText_home_location.setPlainText(str(iha.home_location))
        ui.plainText_gps.setPlainText(str(iha.gps_0))
        ui.line_airspeed.setText(str(round(iha.airspeed,4)))
        ui.line_groundspeed.setText(str(round(iha.groundspeed,4)))
        
        
    timer = QtCore.QTimer()
    timer.timeout.connect(update_line)
    timer.start(500)
    sys.exit(app.exec_())